{"version":3,"sources":["styles/StyledGoal.js","styles/StyledCheckBox.js","styles/StyledGoalDetails.js","components/Goal.js","styles/Global.style.js","App.js","airtableIds.js","index.js"],"names":["StyledGoal","styled","div","StyledCheckBox","label","StyledGoalDetails","Goal","goal","updates","type","defaultChecked","fields","complete","disabled","title","details","map","update","index","GlobalStyle","createGlobalStyle","base","Airtable","apiKey","StyledH1","h1","App","useState","goals","setGoals","setUpdates","useEffect","select","view","eachPage","records","fetchNextPage","filter","goalid","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAkBeA,EAhBIC,IAAOC,IAAV,8OCmCDC,EAnCQF,IAAOG,MAAV,ipBCKLC,EALWJ,IAAOC,IAAV,sE,OC4BRI,EAzBF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpB,OACE,eAAC,EAAD,WAEE,eAAC,EAAD,WACG,IACD,uBAAOC,KAAK,WAAWC,eAAgBH,EAAKI,OAAOC,SAAUC,UAAQ,IACrE,4BAGF,6BAAKN,EAAKI,OAAOG,QAEjB,eAAC,EAAD,WACE,yCACA,4BAAIP,EAAKI,OAAOI,UAChB,yCAECP,EAAQQ,KAAI,SAACC,EAAQC,GAAT,OACX,4BAAgBD,EAAON,OAAOM,QAAtBC,aCrBLC,EAAcC,YAAH,iQCSlBC,EAAO,IAAIC,IAAS,CAAEC,OCTN,sBDSwBF,KCXxB,qBDahBG,EAAWvB,IAAOwB,GAAV,0FAkDCC,MA5Cf,WAGE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOnB,EAAP,KAAgBsB,EAAhB,KAqBA,OAlBAC,qBAAU,WAERV,EAAK,SACFW,OAAO,CAAEC,KAAM,cACfC,UAAS,SAACC,EAASC,GAElBP,EAASM,GACTC,OAGJf,EAAK,WACFW,OAAO,CAAEC,KAAM,cACfC,UAAS,SAACC,EAASC,GAClBN,EAAWK,GACXC,SAEH,IAGD,qCACE,cAACjB,EAAD,IACA,cAACK,EAAD,uBAECI,EAAMZ,KAAI,SAACT,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EAENC,QAASA,EAAQ6B,QACf,SAACpB,GAAD,OAAYA,EAAON,OAAO2B,OAAO,KAAO/B,EAAKgC,OAJ1ChC,EAAKgC,WE/CpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8feb9e8c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst StyledGoal = styled.div`\n  padding: 1rem;\n  margin-bottom: 2rem;\n  h2 {\n    display: inline;\n    font-size: 3rem;\n    padding: 1rem 5rem;\n  }\n  h3 {\n    font-size: 1.5rem;\n  }\n  h3:last-of-type {\n    margin-top: 1rem;\n  }\n`;\n\nexport default StyledGoal;","import styled from \"styled-components\";\n\nconst StyledCheckBox = styled.label`\n  display: block;\n  position: relative;\n  user-select: none;\n  input {\n    display: none;\n    &:checked ~ span {\n      background: #754dff;\n      &::after {\n        display: block;\n      }\n    }\n  }\n  span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 3rem;\n    width: 3rem;\n    background: #dacfff;\n    transition: background 0.3s ease;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 1rem;\n      width: 0.8rem;\n      height: 2rem;\n      border: solid white;\n      border-width: 0 4px 4px 0;\n      transform: rotate(45deg);\n      display: none;\n    }\n  }\n`;\n\nexport default StyledCheckBox;","import styled from \"styled-components\";\n\nconst StyledGoalDetails = styled.div`\n  padding: 2rem;\n  background: #dacfff;\n`;\n\nexport default StyledGoalDetails;","import React from \"react\";\nimport StyledGoal from \"../styles/StyledGoal\";\nimport StyledCheckBox from \"../styles/StyledCheckBox\";\nimport StyledGoalDetails from \"../styles/StyledGoalDetails\";\n\nconst Goal = ({ goal, updates }) => {\n  return (\n    <StyledGoal>\n        {/* DISPLAY CHECKBOX */}\n      <StyledCheckBox>\n        {\" \"}\n        <input type=\"checkbox\" defaultChecked={goal.fields.complete} disabled />\n        <span />\n      </StyledCheckBox>\n      {/* DISPLAY TITLE */}\n      <h2>{goal.fields.title}</h2>\n      {/* DISPLAY DETAILS */}\n      <StyledGoalDetails>\n        <h3>DETAILS</h3>\n        <p>{goal.fields.details}</p>\n        <h3>UPDATES</h3>\n        {/* map through updates */}\n        {updates.map((update, index) => (\n          <p key={index}>{update.fields.update}</p>\n        ))}\n      </StyledGoalDetails>\n    </StyledGoal>\n  );\n};\n\nexport default Goal;","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  body {\n    background: #eee;\n  }\n  #root {\n    width: 80%;\n    margin: 0 auto;\n    font-family: \"Do Hyeon\", sans-serif;\n    color: #272727;\n  }\n`;","import React, { useEffect, useState } from \"react\";\nimport Airtable from \"airtable\";\nimport Goal from \"./components/Goal\";\nimport styled from \"styled-components\";\nimport { GlobalStyle } from \"./styles/Global.style\";\nimport { apiKey, baseId } from \"./airtableIds\";\n\n\n\n\n// base id appqfpGEd5sP5aLXx\nconst base = new Airtable({ apiKey: apiKey }).base(baseId);\n\nconst StyledH1 = styled.h1`\n  text-align: center;\n  font-size: 4rem;\n  margin: 1rem 0;\n`;\n\nfunction App() {\n\n  //assign the data to states\n  const [goals, setGoals] = useState([]);\n  const [updates, setUpdates] = useState([]);\n\n  //this method pulls in the data\n  useEffect(() => {\n    //pull in the 'goals' table view data\n    base(\"goals\")\n      .select({ view: \"Grid view\" })\n      .eachPage((records, fetchNextPage) => { \n        // console.log(records)\n        setGoals(records);\n        fetchNextPage();\n      });\n    //pull in the 'updates' table view data\n    base(\"updates\")\n      .select({ view: \"Grid view\" })\n      .eachPage((records, fetchNextPage) => {\n        setUpdates(records);\n        fetchNextPage();\n      });\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n      <StyledH1>My Goals</StyledH1>\n      {/* map through the 'goals' data and display */}\n      {goals.map((goal) => (\n        <Goal\n          key={goal.id}\n          goal={goal}\n          // filter through the 'updates' data\n          updates={updates.filter(\n            (update) => update.fields.goalid[0] === goal.id\n          )}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default App;\n","export const baseId = \"appqfpGEd5sP5aLXx\"\n\nexport const apiKey = \"key9YOWPfufxQsX9x\"","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}